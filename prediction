import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score
from sklearn.preprocessing import StandardScaler

# Загружаем данные
data = pd.read_csv("krisha.csv", encoding='utf-8', on_bad_lines='warn', engine='python')

# Исправление названия переменной
columns = ['Area (sq.m)', 'Rooms', 'Year']  # Исправлено coloms -> columns
y = data['Price'].str.replace(' ', '').astype(float)
X = data[columns].astype(float)  # Убеждаемся, что все данные числовые

# Разделение на train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Нормализация (масштабируем признаки)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Обучение модели
model = RandomForestRegressor(n_estimators=200, max_depth=10, min_samples_split=5, min_samples_leaf=2, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# Оценка модели
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error (MSE): {mse}")
print(f"Mean Absolute Error (MAE): {mae}")
print(f"R^2 Score: {r2}")

def predict_price(area, rooms, year):
    input_data = np.array([[area, rooms, year]])  # Создаем массив
    input_data = scaler.transform(input_data)  # Масштабируем данные
    predicted_price = model.predict(input_data)  # Предсказываем
    return predicted_price[0]

# Пример использования
area = int(input())  # кв. метры
rooms = int(input()) # количество комнат
year = int(input())  # год постройки
predicted_price = predict_price(area, rooms, year)
print(f'Предсказанная цена: {predicted_price:.2f} KZT')
